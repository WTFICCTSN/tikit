{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/home/wtficctsn/PhpstormProjects/TIKIT/app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/db.server.ts", "/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/healthcheck.tsx", "/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/profile.tsx", "../app/utils.ts", "../app/models/profile.server.ts", "../app/models/ticket.server.ts", "/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/profile/$profileId.tsx", "/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/profile/index.tsx", "/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/tickets.tsx", "/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/tickets/$ticketId.tsx", "/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/tickets/index.tsx", "/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/tickets/new.tsx", "/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/logout.tsx", "/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/index.tsx", "/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/login.tsx", "/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/join.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport appStylesheetUrl from \"./styles/gen.css\";\nimport { getUser } from \"./session.server\";\n\nexport const links: LinksFunction = () => {\n  return [\n      { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n      { rel: \"stylesheet\", href: appStylesheetUrl}];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"TiKiT\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\ntype LoaderData = {\n  user: Awaited<ReturnType<typeof getUser>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return json<LoaderData>({\n    user: await getUser(request),\n  });\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    maxAge: 0,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import type { Password, User, UserType, Profile} from \"@prisma/client\";\nimport bcrypt from \"bcryptjs\";\n\nimport { prisma } from \"~/db.server\";\n\nexport type { User } from \"@prisma/client\";\n// READ ------------------------------------------------------------------------------------------------\nexport async function getUserById(id: User[\"id\"]) {\n  return prisma.user.findUnique({\n      where: { id },\n      include: {\n          userType: true,\n      }\n  });\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return prisma.user.findUnique({\n    where: {email},\n    include: {\n      userType: true,\n    }\n  });\n}\n// CREATE ---------------------------------------------------------------------------------------------\nexport async function createUser(email: User[\"email\"], password: string, userType: User[\"id_userType\"], fsName:string, lsName:string) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n  const hashedEmail    = await bcrypt.hash(email, 10)\n  return prisma.user.create({\n    data: {\n      email : email,\n      id_userType: userType,\n      password: {\n        create: {\n          hash: hashedPassword,\n        },\n      },\n      profile: {\n        create: {\n          first_name:fsName,\n          last_name:lsName,\n          profilePic:{\n            create:{\n              name: fsName.toLowerCase() + \"-\" + lsName.toLowerCase()  + \"_profile\",\n              url: \"https://www.gravatar.com/avatar/\"+ hashedEmail +\"?s=320&d=identicon&r=PG\",\n              createdBy : fsName + \" \" + lsName,\n            }\n          },\n          contacts:{\n            create:{\n              assignedBy:fsName + \" \" + lsName,\n              contact:{\n                create:{\n                  email:true,\n                  phone:false,\n                  name: \"Email\",\n                  info: email,\n                }\n              }\n            }\n\n\n          }\n        },\n      }\n    },\n  });\n}\n\n// DESTROY -----------------------------------------------------------------------------------------\nexport async function deleteUserByEmail(email: User[\"email\"]) {\n  return prisma.user.delete({ where: { email } });\n}\n\n// HELPER ------------------------------------------------------------------------------------------\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"hash\"]\n) {\n  const userWithPassword = await prisma.user.findUnique({\n    where: { email },\n    include: {\n      password: true,\n    },\n  });\n\n  if (!userWithPassword || !userWithPassword.password) {\n    return null;\n  }\n\n  const isValid = await bcrypt.compare(\n    password,\n    userWithPassword.password.hash\n  );\n\n  if (!isValid) {\n    return null;\n  }\n\n  const { password: _password, ...userWithoutPassword } = userWithPassword;\n\n  return userWithoutPassword;\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// in production we'll have a single connection to the DB.\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  prisma = global.__db__;\n  prisma.$connect();\n}\n\nexport { prisma };\n", "// learn more: https://fly.io/docs/reference/configuration/#services-http_checks\nimport type { LoaderFunction } from \"@remix-run/node\";\n\nimport { prisma } from \"~/db.server\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const host =\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\n\n  try {\n    const url = new URL(\"/\", `http://${host}`);\n    // if we can connect to the database and make a simple query\n    // and make a HEAD request to ourselves, then we're good.\n    await Promise.all([\n      prisma.user.count(),\n      fetch(url.toString(), { method: \"HEAD\" }).then((r) => {\n        if (!r.ok) return Promise.reject(r);\n      }),\n    ]);\n    return new Response(\"OK\");\n  } catch (error: unknown) {\n    console.log(\"healthcheck \u274C\", { error });\n    return new Response(\"ERROR\", { status: 500 });\n  }\n};\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport {json, MetaFunction} from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { getProfile } from \"~/models/profile.server\";\nimport { getUserById } from \"~/models/user.server\";\nimport {getTicketListItems} from \"~/models/ticket.server\";\nimport * as React from \"react\";\n\n\ntype LoaderData = {\n    profile: Awaited<ReturnType<typeof getProfile>>;\n    user : Awaited<ReturnType<typeof getUserById>>;\n    ticketListItems: Awaited<ReturnType<typeof getTicketListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    const id_user = await requireUserId(request);\n    const profile = await getProfile(id_user);\n    const user = await getUserById(id_user);\n    const ticketListItems = await getTicketListItems({ id_user });\n    return json<LoaderData>({ profile, user, ticketListItems });\n};\nexport const meta: MetaFunction = () => {\n    return {\n        title: \"User Profile - TiKiT\",\n    };\n};\nexport default function ProfileIndexPage() {\n    const data = useLoaderData() as LoaderData;\n    const user = useUser();\n    //let ticket_url =\"tickets\";\n    // const ticketsRef = React.useRef<HTMLInputElement>(null);\n\n    return (\n        <div className=\"flex h-full min-h-screen flex-col\">\n            <header className=\"flex items-center justify-between bg-purple-800 p-4 text-white\">\n                <h1 className=\"text-3xl font-bold\">\n                    <Link to=\"/tickets\">TIKIT</Link>\n                </h1>\n                <Link to=\"\" className=\"block p-4 text-xl text-white underline border-slate-900\" >\n                    <p className=\"text-white\">{user.email}</p>\n                </Link>\n                <Form action=\"/logout\" method=\"post\">\n                    <button\n                        type=\"submit\"\n                        className=\"rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n                    >\n                        Logout\n                    </button>\n                </Form>\n            </header>\n\n            <main className=\"flex h-full loginGradient\">\n                <div className=\"h-full w-80 border-r border-slate-900 bg-slate-800\">\n                    <Link to=\"new\" className=\"block p-4 text-xl text-white underline border-slate-900\" >\n                        Create Ticket\n                    </Link>\n\n                    <hr />\n\n                    {data.ticketListItems.length === 0 ? (\n                        <p className=\"p-4 text-white\">Feels Lonely In Here</p>\n                    ) : (\n                        <ol>\n                            {data.ticketListItems.map((ticket) => (\n                                <li key={ticket.id}>\n\n                                    <NavLink\n                                        className={({ isActive }) =>\n                                            `block border-b border-slate-900 p-4 text-white text-xl ${isActive ? \"bg-purple-700 underline\" : \"\"}`\n                                        }\n                                        to={\"/tickets/\"+ ticket.id}\n\n                                    >\n                                        {ticket.title}\n                                    </NavLink>\n                                </li>\n                            ))}\n                        </ol>\n                    )}\n                </div>\n\n                <div className=\"flex-1 p-6\">\n                    <Outlet />\n                </div>\n            </main>\n        </div>\n    );\n}", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import type { User, Profile, UserType, Image, ContactsOnProfile, Contact } from \"@prisma/client\";\n\nimport { prisma } from \"~/db.server\";\n\nexport type { Profile } from \"@prisma/client\";\n//READ\nexport function getProfile( id_user: User[\"id\"],) {\n    return prisma.profile.findFirst({\n        where: { id_user },\n        include: {\n            profilePic : true,\n            contacts : {\n                include:{\n                    contact:true,\n                }\n            }\n        }\n    });\n}\n\n\n//Create\nexport function createProfile({\n                                 first_name,\n                                 last_name,\n                                 id_user,\n                             }: Pick<Profile, \"first_name\" | \"last_name\"> & {\n    id_user: User[\"id\"];\n}) {\n    return prisma.profile.create({\n        data: {\n            first_name,\n            last_name,\n            user: {\n                connect: {\n                    id: id_user,\n                },\n            },\n        },\n    });\n}\n", "import type { User, Ticket } from \"@prisma/client\";\n\nimport { prisma } from \"~/db.server\";\n// import {Ticket} from \"@prisma/client\";\n\nexport type { Ticket } from \"@prisma/client\";\n//READ\nexport function getTicket({\n                             id,\n                             id_user,\n                         }: Pick<Ticket, \"id\"> & {\n    id_user: User[\"id\"];\n}) {\n    return prisma.ticket.findFirst({\n        where: { id, id_user },\n    });\n}\n\nexport function getTicketListItems({ id_user }: { id_user: User[\"id\"] }) {\n    return prisma.ticket.findMany({\n        where: { id_user },\n        select: { id: true, title: true  },\n        orderBy: { updatedAt: \"desc\" },\n    });\n}\n//Create\nexport function createTicket({\n                               title,\n                               desc,\n                               userId,\n\n                           }: Pick<Ticket, \"title\" | \"desc\"> & {\n    userId: User[\"id\"];\n}) {\n    return prisma.ticket.create({\n        data: {\n            title,\n            desc,\n            user: {\n                connect: {\n                    id: userId,\n                },\n            },\n        },\n    });\n}\n\n\n\n//REMOVE\nexport function deleteTicket({\n                               id, id_user,\n                           }: Pick<Ticket, \"id\"> & { id_user: User[\"id\"] }) {\n    return prisma.ticket.deleteMany({\n        where: { id, id_user },\n    });\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport {Form, NavLink, useCatch, useLoaderData} from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport type { Profile } from \"~/models/profile.server\";\nimport type { Ticket } from \"~/models/ticket.server\";\nimport { getProfile } from \"~/models/profile.server\";\nimport { getTicketListItems} from \"~/models/ticket.server\";\nimport { requireUserId } from \"~/session.server\";\n//CONTENT TO LOAD\ntype LoaderData = {\n    profile: Profile;\n    ticketListItems: Awaited<ReturnType<typeof getTicketListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const id_user = await requireUserId(request);\n    invariant(params.profileId, \"profileId not found\");\n    const profile = await getProfile( params.profileId );\n    const ticketListItems = await getTicketListItems({id_user: params.profileId });\n    if (!profile) {\n        throw new Response(\"Not Found\", { status: 404 });\n    }\n    return json<LoaderData>({ profile , ticketListItems });\n};\n//CONTENT INJECTION\nexport default function ProfilePage() {\n    const data = useLoaderData() as LoaderData;\n    console.log(data);\n    return (\n        <div className=\"\">\n            <div className=\"p-8 \">\n                <div className=\"p-4 pt-8 flex w-full bg-opacity-75 bg-slate-800\">\n                    <div className=\"w-1/5 h-1/5\">\n                        <img className=\"rounded-full \" src={data.profile.profilePic.url} alt={data.profile.profilePic.name}/>\n                    </div>\n                    <div className=\"pl-8 w-full\">\n                        <h3 className=\"text-6xl text-white font-thin\">#{data.profile.id} <span className='font-bold'>{data.profile.first_name} {data.profile.last_name}</span>\n                        </h3>\n                        <hr className=\"my-4\" />\n                        <div className=\" text-white\">\n                            {data.profile.contacts.length === 0 ? (\n                                <p className=\"p-4 text-white\">No Contacts Available Yet</p>\n                            ) : (\n                                <ol className=\"inline-flex\">\n                                    {data.profile.contacts.map((contacto) => (\n                                        <li className=\"pr-6\" key={contacto.contact.id}>\n                                            <span className=\"font-bold\">{contacto.contact.name} </span> : <span className=\"underline\">{contacto.contact.info}</span>\n                                        </li>\n                                    ))}\n                                </ol>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"p-8 pt-0\">\n                <div className=\" pl-8 my-4 p-4 flex w-full bg-opacity-75 bg-slate-800\">\n                    {data.ticketListItems.length === 0 ? (\n                        <p className=\"p-4 text-white\">Feels Lonely In Here</p>\n                    ) : (\n                        <ol>\n                            {data.ticketListItems.map((ticket) => (\n                                <li key={ticket.id} className=\"p-4 pb-8 w-full\">\n\n                                    <h3 className=\"text-2xl text-white font-thin hover:text-slate-600\">#{ticket.id} <span className='font-bold'>{ticket.title}</span></h3><hr></hr>\n\n                                </li>\n                            ))}\n                        </ol>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n//ERROR\nexport function ErrorBoundary({ error }: { error: Error }) {\n    console.error(error);\n\n    return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n    const caught = useCatch();\n\n    if (caught.status === 404) {\n        return <div>User not found</div>;\n    }\n\n    throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport {Form, NavLink, useCatch, useLoaderData} from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport type { Profile } from \"~/models/profile.server\";\nimport type { Ticket } from \"~/models/ticket.server\";\nimport { getProfile } from \"~/models/profile.server\";\nimport { getTicketListItems} from \"~/models/ticket.server\";\nimport { requireUserId } from \"~/session.server\";\n//CONTENT TO LOAD\ntype LoaderData = {\n    profile: Profile;\n    ticketListItems: Awaited<ReturnType<typeof getTicketListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    const id_user = await requireUserId(request);\n    const profile = await getProfile( id_user );\n    const ticketListItems = await getTicketListItems({ id_user });\n    if (!profile) {\n        throw new Response(\"Not Found\", { status: 404 });\n    }\n    return json<LoaderData>({ profile , ticketListItems });\n};\n//CONTENT INJECTION\nexport default function ProfilePage() {\n    const data = useLoaderData() as LoaderData;\n    console.log(data);\n    let ticket_url: string;\n    return (\n        <div className=\"\">\n            <div className=\"p-8 \">\n                <div className=\"p-4 pt-8 flex w-full bg-opacity-75 bg-slate-800\">\n                    <div className=\"w-1/5 h-1/5\">\n                        <img className=\"rounded-full \" src={data.profile.profilePic.url} alt={data.profile.profilePic.name}/>\n                    </div>\n                    <div className=\"pl-8 w-full\">\n                        <h3 className=\"text-6xl text-white font-thin\">#{data.profile.id} <span className='font-bold'>{data.profile.first_name} {data.profile.last_name}</span>\n                        </h3>\n                        <hr className=\"my-4\" />\n                        <div className=\" text-white\">\n                            {data.profile.contacts.length === 0 ? (\n                                <p className=\"p-4 text-white\">No Contacts Available Yet</p>\n                            ) : (\n                                <ol className=\"inline-flex\">\n                                    {data.profile.contacts.map((contacto) => (\n                                        <li className=\"pr-6\" key={contacto.contact.id}>\n                                            <span className=\"font-bold\">{contacto.contact.name} </span> : <span className=\"underline\">{contacto.contact.info}</span>\n                                        </li>\n                                    ))}\n                                </ol>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"p-8 pt-0\">\n            <div className=\" pl-8 my-4 p-4 flex w-full bg-opacity-75 bg-slate-800\">\n                {data.ticketListItems.length === 0 ? (\n                    <p className=\"p-4 text-white\">Feels Lonely In Here</p>\n                ) : (\n                    <ol className=\"w-full\">\n                        {data.ticketListItems.map((ticket) => (\n\n\n                            <NavLink to={\"/tickets/\"+ ticket.id}>\n                            <li key={ticket.id} className=\"p-4 pb-8 w-full\">\n                                <h3 className=\"text-2xl text-white font-thin hover:text-slate-600\">#{ticket.id} <span className='font-bold'>{ticket.title}</span></h3><hr></hr>\n                            </li>\n                            </NavLink>\n                            ))}\n                    </ol>\n                )}\n            </div>\n        </div>\n        </div>\n);\n}\n//ERROR\nexport function ErrorBoundary({ error }: { error: Error }) {\n    console.error(error);\n\n    return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n    const caught = useCatch();\n\n    if (caught.status === 404) {\n        return <div>User not found</div>;\n    }\n\n    throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { getTicketListItems } from \"~/models/ticket.server\";\nimport * as React from \"react\";\n\ntype LoaderData = {\n\n    ticketListItems: Awaited<ReturnType<typeof getTicketListItems>>;\n\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    const id_user = await requireUserId(request);\n    const ticketListItems = await getTicketListItems({ id_user });\n    return json<LoaderData>({ ticketListItems });\n};\n\nexport default function TicketsPage() {\n    const data = useLoaderData() as LoaderData;\n    const user = useUser();\n    const profileURL = \"/profile\";\n    return (\n        <div className=\"flex h-full min-h-screen flex-col\">\n            <header className=\"flex items-center justify-between bg-purple-800 p-4 text-white\">\n                <h1 className=\"text-3xl font-bold\">\n                    <Link to=\"/tickets\">TIKIT</Link>\n                </h1>\n                <Link to={profileURL} className=\"block p-4 text-xl text-white underline border-slate-900\" >\n                    <p className=\"text-white\">{user.email}</p>\n                </Link>\n                <Form action=\"/logout\" method=\"post\">\n                    <button\n                        type=\"submit\"\n                        className=\"rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-slate-500 active:bg-slate-600\"\n                    >\n                        Logout\n                    </button>\n                </Form>\n            </header>\n            <main className=\"flex h-full loginGradient\">\n                <div className=\"h-full w-80 border-r border-slate-900 bg-slate-800\">\n                    <Link to=\"new\" className=\"block p-4 text-xl text-white underline border-slate-900\" >\n                        Create Ticket\n                    </Link>\n\n                    <hr />\n\n                    {data.ticketListItems.length === 0 ? (\n                        <p className=\"p-4 text-white\">Feels Lonely In Here</p>\n                    ) : (\n                        <ol>\n                            {data.ticketListItems.map((ticket) => (\n                                <li key={ticket.id}>\n\n                                    <NavLink\n                                        className={({ isActive }) =>\n                                            `block border-b border-slate-900 p-4 text-white text-xl ${isActive ? \"bg-purple-700 underline\" : \"\"}`\n                                        }\n                                        to={\"/tickets/\"+ ticket.id}\n\n                                    >\n                                        {ticket.title}\n                                    </NavLink>\n                                </li>\n                            ))}\n                        </ol>\n                    )}\n                </div>\n\n                <div className=\"flex-1 p-6\">\n                    <Outlet />\n                </div>\n            </main>\n        </div>\n\n\n\n    );\n}", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useCatch, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport type { Ticket } from \"~/models/ticket.server\";\nimport type { Profile } from \"~/models/profile.server\";\n\n\nimport {getProfile} from \"~/models/profile.server\";\nimport { deleteTicket } from \"~/models/ticket.server\";\nimport { getTicket } from \"~/models/ticket.server\";\nimport { requireUserId } from \"~/session.server\";\n//CONTENT TO LOAD\ntype LoaderData = {\n    ticket: Ticket;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const id_user = await requireUserId(request);\n    invariant(params.ticketId, \"ticketId not found\");\n    console.log(params.id);\n\n    const ticket = await getTicket({ id: params.ticketId, id_user });\n    if (!ticket) {\n        throw new Response(\"Not Found\", { status: 404 });\n    }\n    return json<LoaderData>({ ticket });\n};\n//CONTENT INJECTION\nexport default function TicketDetailsPage() {\n    const data = useLoaderData() as LoaderData;\n\n    return (\n        <div className=\"p-8 h-full\">\n            <div className=\"p-4 pt-8 w-full bg-opacity-75 text-white bg-slate-800\">\n                <h3 className=\"text-2xl font-thin\">#{data.ticket.id} <span className='font-bold'>{data.ticket.title}</span></h3>\n                <hr className=\"my-4\" />\n            </div>\n            <div className=\" my-4 p-4 pt-8 flex w-full bg-opacity-75 text-white bg-slate-800\">\n                <p className=\"py-6\">{data.ticket.desc}</p>\n            </div>\n            <Form method=\"post\">\n                <button\n                    type=\"submit\"\n                    className=\"rounded bg-slate-500  py-2 px-4 text-white hover:bg-slate-600 focus:bg-slate-400\"\n                >\n                    Delete\n                </button>\n            </Form>\n        </div>\n    );\n}\n\n\n\n//ERROR\nexport function ErrorBoundary({ error }: { error: Error }) {\n    console.error(error);\n\n    return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n    const caught = useCatch();\n\n    if (caught.status === 404) {\n        return <div>Note not found</div>;\n    }\n\n    throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { getTicketListItems } from \"~/models/ticket.server\";\n\n\ntype LoaderData = {\n    ticketListItems: Awaited<ReturnType<typeof getTicketListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    const id_user = await requireUserId(request);\n    const ticketListItems = await getTicketListItems({ id_user });\n    return json<LoaderData>({ ticketListItems });\n};\n\nexport default function TicketsIndexPage() {\n    const data = useLoaderData() as LoaderData;\n    // const user = useUser()\n    return (\n        <div className=\"p-8 h-full\">\n            <div className=\"p-4 pt-8 w-full bg-opacity-75 bg-slate-800\">\n                {data.ticketListItems.length === 0 ? (\n                 <p className=\"p-4 text-white\">Feels Lonely In Here</p>\n                ) : (\n                <ol className=\"grid grid-cols-4 gap-2 sm:grid-cols-2\">\n                    {data.ticketListItems.map((ticket) => (\n                        <li className=\"p-2 bg-purple-800 shadow-xl rounded\" key={ticket.id}>\n                            <NavLink\n                                className={({ isActive }) =>\n                                    `block border-b border-slate-900 p-4 text-white text-xl ${isActive ? \"bg-purple-700 underline\" : \"\"}`\n                                }\n                                to={ticket.id}\n                            >\n                                {ticket.title}\n                            </NavLink>\n                        </li>\n                    ))}\n                </ol>\n            )}\n            </div>\n        </div>\n    );\n}", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createTicket } from \"~/models/ticket.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype ActionData = {\n    errors?: {\n        title?: string;\n        desc?: string;\n    };\n};\nexport const action: ActionFunction = async ({ request }) => {\n    const userId = await requireUserId(request);\n\n    const formData = await request.formData();\n    const title = formData.get(\"title\");\n    const desc = formData.get(\"desc\");\n\n    if (typeof title !== \"string\" || title.length === 0) {\n        return json<ActionData>(\n            { errors: { title: \"Title is required\" } },\n            { status: 400 }\n        );\n    }\n\n    if (typeof desc !== \"string\" || desc.length === 0) {\n        return json<ActionData>(\n            { errors: { desc: \"desc is required\" } },\n            { status: 400 }\n        );\n    }\n\n    const ticket = await createTicket({ title, desc, userId });\n\n    return redirect(`/tickets/${ticket.id}`);\n};\n\nexport default function NewTicketPage() {\n    const actionData = useActionData() as ActionData;\n    const titleRef = React.useRef<HTMLInputElement>(null);\n    const bodyRef = React.useRef<HTMLTextAreaElement>(null);\n\n    React.useEffect(() => {\n        if (actionData?.errors?.title) {\n            titleRef.current?.focus();\n        } else if (actionData?.errors?.desc) {\n            bodyRef.current?.focus();\n        }\n    }, [actionData]);\n\n    return (\n        <Form\n            method=\"post\"\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 8,\n                width: \"100%\",\n            }}\n        >\n            <div>\n                <label className=\"flex w-full flex-col gap-1\">\n                    <span>Title: </span>\n                    <input\n                        ref={titleRef}\n                        name=\"title\"\n                        className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n                        aria-invalid={actionData?.errors?.title ? true : undefined}\n                        aria-errormessage={\n                            actionData?.errors?.title ? \"title-error\" : undefined\n                        }\n                    />\n                </label>\n                {actionData?.errors?.title && (\n                    <div className=\"pt-1 text-red-700\" id=\"title-error\">\n                        {actionData.errors.title}\n                    </div>\n                )}\n            </div>\n\n            <div>\n                <label className=\"flex w-full flex-col gap-1\">\n                    <span>Body: </span>\n                    <textarea\n                        ref={bodyRef}\n                        name=\"desc\"\n                        rows={8}\n                        className=\"w-full flex-1 rounded-md border-2 border-blue-500 py-2 px-3 text-lg leading-6\"\n                        aria-invalid={actionData?.errors?.desc ? true : undefined}\n                        aria-errormessage={\n                            actionData?.errors?.desc ? \"body-error\" : undefined\n                        }\n                    />\n                </label>\n                {actionData?.errors?.desc && (\n                    <div className=\"pt-1 text-red-700\" id=\"body-error\">\n                        {actionData.errors.desc}\n                    </div>\n                )}\n            </div>\n\n            <div className=\"text-right\">\n                <button\n                    type=\"submit\"\n                    className=\"rounded bg-blue-500 py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n                >\n                    Save\n                </button>\n            </div>\n        </Form>\n    );\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "import { Link } from \"@remix-run/react\";\n\nimport { useOptionalUser } from \"~/utils\";\n\nexport default function Index() {\n  const user = useOptionalUser();\n  return (\n    <main className=\"relative min-h-screen loginGradient sm:flex sm:items-center sm:justify-center\">\n      <div className=\"relative sm:pb-16 sm:pt-8\">\n        <div className=\"mx-auto max-w-7xl sm:px-6 lg:px-8\">\n          <div className=\"relative bg-slate-800 shadow-xl sm:overflow-hidden sm:rounded-2xl\">\n            <div className=\"absolute inset-0\">\n\n              <div className=\"absolute inset-0 bg-[color:rgba(254,204,27,0.5)] mix-blend-multiply\" />\n            </div>\n            <div className=\"lg:pb-18 relative px-4 pt-16 pb-8 sm:px-6 sm:pt-24 sm:pb-14 lg:px-8 lg:pt-32\">\n              <h1 className=\"text-center text-6xl font-extrabold tracking-tight sm:text-8xl lg:text-9xl\">\n                <span className=\"block uppercase text-purple-800 drop-shadow-md\">\n                  TIKIT\n                </span>\n              </h1>\n              <p className=\"mx-auto mt-6 max-w-lg text-center text-xl text-white sm:max-w-3xl\">\n                Check the README.md file for instructions on how to get this\n                project deployed.\n              </p>\n              <div className=\"mx-auto mt-10 max-w-sm sm:flex sm:max-w-none sm:justify-center\">\n                {user ? (\n                  <Link\n                    to=\"/tickets\"\n                    className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-purple-800 shadow-sm hover:bg-purple-50 sm:px-8\"\n                  >\n                    View Tikets for {user.email}\n                  </Link>\n                ) : (\n                  <div className=\"space-y-4 sm:mx-auto sm:inline-grid sm:grid-cols-2 sm:gap-5 sm:space-y-0\">\n                    <Link\n                      to=\"/join\"\n                      className=\"flex items-center justify-center rounded-md border border-transparent bg-white px-4 py-3 text-base font-medium text-purple-700 shadow-sm hover:bg-purple-50 sm:px-8\"\n                    >\n                      Sign up\n                    </Link>\n                    <Link\n                      to=\"/login\"\n                      className=\"flex items-center justify-center rounded-md bg-purple-500 px-4 py-3 font-medium text-white hover:bg-purple-600  \"\n                    >\n                      Log In\n                    </Link>\n                  </div>\n                )}\n              </div>\n              {/*\n              <a href=\"https://remix.run\">\n                <img\n                  src=\"https://user-images.githubusercontent.com/1500684/158298926-e45dafff-3544-4b69-96d6-d3bcc33fc76a.svg\"\n                  alt=\"Remix\"\n                  className=\"mx-auto mt-16 w-full max-w-[12rem] md:max-w-[16rem]\"\n                />\n              </a>\n              */}\n            </div>\n          </div>\n        </div>\n\n        {/*<div className=\"mx-auto max-w-7xl py-2 px-4 sm:px-6 lg:px-8\">\n          <div className=\"mt-6 flex flex-wrap justify-center gap-8\">\n            {[\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764397-ccd8ea10-b8aa-4772-a99b-35de937319e1.svg\",\n                alt: \"Fly.io\",\n                href: \"https://fly.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764395-137ec949-382c-43bd-a3c0-0cb8cb22e22d.svg\",\n                alt: \"SQLite\",\n                href: \"https://sqlite.org\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764484-ad64a21a-d7fb-47e3-8669-ec046da20c1f.svg\",\n                alt: \"Prisma\",\n                href: \"https://prisma.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764276-a516a239-e377-4a20-b44a-0ac7b65c8c14.svg\",\n                alt: \"Tailwind\",\n                href: \"https://tailwindcss.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157764454-48ac8c71-a2a9-4b5e-b19c-edef8b8953d6.svg\",\n                alt: \"Cypress\",\n                href: \"https://www.cypress.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772386-75444196-0604-4340-af28-53b236faa182.svg\",\n                alt: \"MSW\",\n                href: \"https://mswjs.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772447-00fccdce-9d12-46a3-8bb4-fac612cdc949.svg\",\n                alt: \"Vitest\",\n                href: \"https://vitest.dev\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772662-92b0dd3a-453f-4d18-b8be-9fa6efde52cf.png\",\n                alt: \"Testing Library\",\n                href: \"https://testing-library.com\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772934-ce0a943d-e9d0-40f8-97f3-f464c0811643.svg\",\n                alt: \"Prettier\",\n                href: \"https://prettier.io\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157772990-3968ff7c-b551-4c55-a25c-046a32709a8e.svg\",\n                alt: \"ESLint\",\n                href: \"https://eslint.org\",\n              },\n              {\n                src: \"https://user-images.githubusercontent.com/1500684/157773063-20a0ed64-b9f8-4e0b-9d1e-0b65a3d4a6db.svg\",\n                alt: \"TypeScript\",\n                href: \"https://typescriptlang.org\",\n              },\n            ].map((img) => (\n              <a\n                key={img.href}\n                href={img.href}\n                className=\"flex h-16 w-32 justify-center p-1 grayscale transition hover:grayscale-0 focus:grayscale-0\"\n              >\n                <img alt={img.alt} src={img.src} />\n              </a>\n            ))}\n          </div>\n        </div>*/}\n      </div>\n    </main>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { verifyLogin } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors?: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/tickets\");\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\") {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json<ActionData>(\n      { errors: { email: \"Invalid email or password\" } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === \"on\" ? true : false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/tickets\";\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\">\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Log in\n          </button>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"ml-2 block text-sm text-gray-900\"\n              >\n                Remember me\n              </label>\n            </div>\n            <div className=\"text-center text-sm text-gray-500\">\n              Don't have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/join\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Sign up\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getUserId, createUserSession } from \"~/session.server\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\nimport {getFieldValue} from \"ast-types\";\nimport {first} from \"rxjs\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors: {\n    email?: string;\n    password?: string;\n    fname?: string\n    lname?: string\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const userType = formData.get(\"userType\");\n  const firstName =  formData.get(\"firstName\");\n  const lastName = formData.get(\"lastName\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n        { errors: { email: \"Email is invalid\" } },\n        { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\") {\n    return json<ActionData>(\n        { errors: { password: \"Password is required\" } },\n        { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n        { errors: { password: \"Password is too short\" } },\n        { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json<ActionData>(\n        { errors: { email: \"A user already exists with this email\" } },\n        { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password, userType, firstName, lastName);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Registar - TiKiT\",\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const fNameRef = React.useRef<HTMLInputElement>(null);\n  const lNameRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n  const UserTypeRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    } else if (actionData?.errors?.fname) {\n      fNameRef.current?.focus();\n    } else if (actionData?.errors?.lname) {\n      lNameRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n      <div className=\"flex min-h-full flex-col justify-center\">\n        <div className=\"mx-auto w-full max-w-md px-8\">\n          <Form method=\"post\" className=\"space-y-6\">\n            <div className=\"inline-flex gap-2\">\n              <div>\n                <label\n                    htmlFor=\"firstName\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                >\n                  First Name:\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                      ref={fNameRef}\n                      id=\"firstName\"\n                      required\n                      autoFocus={true}\n                      name=\"firstName\"\n                      type=\"firstName\"\n                      autoComplete=\"fname\"\n                      aria-invalid={actionData?.errors?.fname ? true : undefined}\n                      aria-describedby=\"email-error\"\n                      className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                  />\n                  {actionData?.errors?.fname && (\n                      <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                        {actionData.errors.fname}\n                      </div>\n                  )}\n                </div>\n              </div>\n              <div>\n                <label\n                    htmlFor=\"lastName\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Last Name:\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                      ref={fNameRef}\n                      id=\"lastName\"\n                      required\n                      autoFocus={true}\n                      name=\"lastName\"\n                      type=\"lastName\"\n                      autoComplete=\"lname\"\n                      aria-invalid={actionData?.errors?.lname ? true : undefined}\n                      aria-describedby=\"email-error\"\n                      className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                  />\n                  {actionData?.errors?.lname && (\n                      <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                        {actionData.errors.lname}\n                      </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div>\n              <label\n                  htmlFor=\"email\"\n                  className=\"block text-sm font-medium text-gray-700\"\n              >\n                Email address\n              </label>\n              <div className=\"mt-1\">\n                <input\n                    ref={emailRef}\n                    id=\"email\"\n                    required\n                    autoFocus={true}\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    aria-invalid={actionData?.errors?.email ? true : undefined}\n                    aria-describedby=\"email-error\"\n                    className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                />\n                {actionData?.errors?.email && (\n                    <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                      {actionData.errors.email}\n                    </div>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <label\n                  htmlFor=\"password\"\n                  className=\"block text-sm font-medium text-gray-700\"\n              >\n                Password\n              </label>\n              <div className=\"mt-1\">\n                <input\n                    id=\"password\"\n                    ref={passwordRef}\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    aria-invalid={actionData?.errors?.password ? true : undefined}\n                    aria-describedby=\"password-error\"\n                    className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n                />\n                {actionData?.errors?.password && (\n                    <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                      {actionData.errors.password}\n                    </div>\n                )}\n              </div>\n            </div>\n            <div>\n              <label htmlFor=\"checkboxes\" className=\"block text-sm font-medium text-gray-700\"> Tipo Utilizador: </label>\n              <div id=\"checkboxes\" className=\"inline-flex w-full\">\n\n                <label className=\"mr-6 p-6\">\n                  <input className=\"mr-1\" name=\"userType\" type=\"radio\" value=\"cl3ycqrmc0247ca2l92hfqbqv\" ref={UserTypeRef} defaultChecked={true} />\n                  Technician\n                </label>\n                <label className=\"mr-6 p-6\">\n                  <input className=\"mr-1\" ref={UserTypeRef}  name=\"userType\" type=\"radio\" value=\"cl3ycqrmd0249ca2lv7d7pnri\" />\n                  Client\n                </label>\n              </div>\n            </div>\n            <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n            <button\n                type=\"submit\"\n                className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n            >\n              Create Account\n            </button>\n            <div className=\"flex items-center justify-center\">\n              <div className=\"text-center text-sm text-gray-500\">\n                Already have an account?{\" \"}\n                <Link\n                    className=\"text-blue-500 underline\"\n                    to={{\n                      pathname: \"/login\",\n                      search: searchParams.toString(),\n                    }}\n                >\n                  Log in\n                </Link>\n              </div>\n            </div>\n          </Form>\n        </div>\n      </div>\n  );\n}\n", "export default {'version':'00d9d3ad','entry':{'module':'/build/entry.client-CTZHR2LU.js','imports':['/build/_shared/chunk-LFKUBUPM.js','/build/_shared/chunk-6BO74FWO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-AXBRG3KJ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/healthcheck':{'id':'routes/healthcheck','parentId':'root','path':'healthcheck','index':undefined,'caseSensitive':undefined,'module':'/build/routes/healthcheck-DZ55A626.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-QA3BVCOR.js','imports':['/build/_shared/chunk-PVLJMNHA.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/build/routes/join-4PQEKU2P.js','imports':['/build/_shared/chunk-DFG4XZEI.js','/build/_shared/chunk-PVLJMNHA.js','/build/_shared/chunk-ME5PAYV3.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-LVIOJZPV.js','imports':['/build/_shared/chunk-DFG4XZEI.js','/build/_shared/chunk-PVLJMNHA.js','/build/_shared/chunk-ME5PAYV3.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-PABHQ6ZK.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile':{'id':'routes/profile','parentId':'root','path':'profile','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile-SIQNR553.js','imports':['/build/_shared/chunk-DFG4XZEI.js','/build/_shared/chunk-SVTFN5EC.js','/build/_shared/chunk-PVLJMNHA.js','/build/_shared/chunk-SZXMSDPC.js','/build/_shared/chunk-ME5PAYV3.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/profile/$profileId':{'id':'routes/profile/$profileId','parentId':'routes/profile','path':':profileId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/profile/$profileId-W5ANUPFL.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/profile/index':{'id':'routes/profile/index','parentId':'routes/profile','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/profile/index-T274IHDE.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/tickets':{'id':'routes/tickets','parentId':'root','path':'tickets','index':undefined,'caseSensitive':undefined,'module':'/build/routes/tickets-DUHEGS7D.js','imports':['/build/_shared/chunk-PVLJMNHA.js','/build/_shared/chunk-SZXMSDPC.js','/build/_shared/chunk-ME5PAYV3.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/tickets/$ticketId':{'id':'routes/tickets/$ticketId','parentId':'routes/tickets','path':':ticketId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/tickets/$ticketId-ZJGWGPVP.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/tickets/index':{'id':'routes/tickets/index','parentId':'routes/tickets','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/tickets/index-EZ56SE4Y.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/tickets/new':{'id':'routes/tickets/new','parentId':'routes/tickets','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/tickets/new-D72ZUKJR.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-00D9D3AD.js'};", "\nimport * as entryServer from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/entry.server.tsx\";\nimport * as route0 from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/root.tsx\";\nimport * as route1 from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/healthcheck.tsx\";\nimport * as route2 from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/profile.tsx\";\nimport * as route3 from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/profile/$profileId.tsx\";\nimport * as route4 from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/profile/index.tsx\";\nimport * as route5 from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/tickets.tsx\";\nimport * as route6 from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/tickets/$ticketId.tsx\";\nimport * as route7 from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/tickets/index.tsx\";\nimport * as route8 from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/tickets/new.tsx\";\nimport * as route9 from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/logout.tsx\";\nimport * as route10 from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/index.tsx\";\nimport * as route11 from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/login.tsx\";\nimport * as route12 from \"/home/wtficctsn/PhpstormProjects/TIKIT/app/routes/join.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/healthcheck\": {\n      id: \"routes/healthcheck\",\n      parentId: \"root\",\n      path: \"healthcheck\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/profile\": {\n      id: \"routes/profile\",\n      parentId: \"root\",\n      path: \"profile\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/profile/$profileId\": {\n      id: \"routes/profile/$profileId\",\n      parentId: \"routes/profile\",\n      path: \":profileId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/profile/index\": {\n      id: \"routes/profile/index\",\n      parentId: \"routes/profile\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/tickets\": {\n      id: \"routes/tickets\",\n      parentId: \"root\",\n      path: \"tickets\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/tickets/$ticketId\": {\n      id: \"routes/tickets/$ticketId\",\n      parentId: \"routes/tickets\",\n      path: \":ticketId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/tickets/index\": {\n      id: \"routes/tickets/index\",\n      parentId: \"routes/tickets\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/tickets/new\": {\n      id: \"routes/tickets/new\",\n      parentId: \"routes/tickets\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    }\n  };"],
  "mappings": "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",
  "names": []
}
